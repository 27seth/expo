package expo.modules.backgroundtask

import kotlinx.coroutines.CompletableDeferred
import java.util.UUID

class BackgroundTaskScheduler {
  companion object {
    // Unique identifier (generated by us) to identify the worker
    private const val WORKER_IDENTIFIER_VALUE = "75d281a2-f7e0-4fdc-816b-1915866e154e"

    // UUID for registering worker task
    private val WORKER_IDENTIFIER: UUID = UUID.fromString(WORKER_IDENTIFIER_VALUE)

    // Log tag
    private val TAG: String = BackgroundTaskScheduler::class.java.simpleName

    /**
    Tries to schedule the worker task to run
     */
    fun tryScheduleWorker() {

    }

    /**
    Cancels the worker task
     */
    fun stopWorker () {

    }

    /**
    Returns true if the worker task is pending
     */
    fun isWorkerRunning() {

    }
  }
}